### This file is generated by opam2nix.

self:
let
    lib = self.lib;
    pkgs = self.pkgs;
    selection = self.selection;
    repoPath = self.repoPath;
    repos = 
    {
      opam-repository = 
      rec {
        fetch = 
        {
          owner = "ocaml";
          repo = "opam-repository";
          rev = "a1d6873040c637398b61ca7a5f229d62429f959f";
          sha256 = "19acm60m43si703psjzkl0q1zxsmgwj4kayqinzgjvrrq0vdmxmh";
        };
        src = (pkgs.fetchFromGitHub) fetch;
      };
    };
in
{
  format-version = 4;
  inherit repos;
  ocaml-version = "4.14.0";
  selection = 
  {
    alcotest = 
    {
      pname = "alcotest";
      version = "1.6.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/mirage/alcotest/releases/download/1.6.0/alcotest-1.6.0.tbz";
        sha256 = "0a939glmndarbnr3w4ilvnkjzh7g2inmdvypn7rlz1wmhdkgj07x";
      };
      opamInputs = 
      {
        inherit (selection) uutf stdlib-shims re ocaml-syntax-shims ocaml fmt
        dune cmdliner astring;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/alcotest/alcotest.1.6.0";
        hash = "sha256:0hvmdg6kp6zcnjwa3gc85ilfm67iinrdjpjjc5ginhc43hbd93ap";
      };
    };
    angstrom = 
    {
      pname = "angstrom";
      version = "0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/inhabitedtype/angstrom/archive/0.15.0.tar.gz";
        sha256 = "01cjjal8vjsm225v9y0q6ixam8k5f821rcr6yix6i9nzs84aq6gi";
      };
      opamInputs = 
      {
        inherit (selection) result ocaml-syntax-shims ocaml dune bigstringaf;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/angstrom/angstrom.0.15.0";
        hash = "sha256:07ryik3g3hz79hnfdwxdh2jsw3cmbgygjs7mjdw07p927wkd83k9";
      };
    };
    astring = 
    {
      pname = "astring";
      version = "0.8.5";
      src = pkgs.fetchurl 
      {
        url = "https://erratique.ch/software/astring/releases/astring-0.8.5.tbz";
        sha256 = "1ykhg9gd3iy7zsgyiy2p9b1wkpqg9irw5pvcqs3sphq71iir4ml6";
      };
      opamInputs = 
      {
        inherit (selection) topkg ocamlfind ocamlbuild ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/astring/astring.0.8.5";
        hash = "sha256:1djnad9sq12idlakj069xvwm2nn7wqm137pqbxxai5frkgi08x74";
      };
    };
    base = 
    {
      pname = "base";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/base-v0.15.0.tar.gz";
        sha256 = "0gd5lq9474hbgzczb07pazqrbnnjjyfw8i9225bq95594i1swmw6";
      };
      opamInputs = 
      {
        inherit (selection) sexplib0 ocaml dune-configurator dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/base/base.v0.15.0";
        hash = "sha256:12f5im78rqg349nsxhvy2skyyf223nf3nmrq8pni08psf5l45cz3";
      };
    };
    base-bigarray = 
    {
      pname = "base-bigarray";
      version = "base";
      src = null;
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/base-bigarray/base-bigarray.base";
        hash = "sha256:1hgfwxh4vdv21m2a4g506y27pcv912v67qi4svrn53rgc43ckv6b";
      };
    };
    base-bytes = 
    {
      pname = "base-bytes";
      version = "base";
      src = null;
      opamInputs = {
                     inherit (selection) ocamlfind ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/base-bytes/base-bytes.base";
        hash = "sha256:0a68lmbf68jgm1i3b59j2sc3ha9yhv4678f9mfwwvczw88prq7l3";
      };
    };
    base-threads = 
    {
      pname = "base-threads";
      version = "base";
      src = null;
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/base-threads/base-threads.base";
        hash = "sha256:1c4bpyh61ampjgk5yh3inrgcpf1z1xv0pshn54ycmpn4dyzv0p2x";
      };
    };
    base-unix = 
    {
      pname = "base-unix";
      version = "base";
      src = null;
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/base-unix/base-unix.base";
        hash = "sha256:0mpsvb7684g723ylngryh15aqxg3blb7hgmq2fsqjyppr36iyzwg";
      };
    };
    base64 = 
    {
      pname = "base64";
      version = "3.5.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/mirage/ocaml-base64/releases/download/v3.5.0/base64-v3.5.0.tbz";
        sha256 = "19735bvb3k263hzcvdhn4d5lfv2qscc9ib4q85wgxsvq0p0fk7aq";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/base64/base64.3.5.0";
        hash = "sha256:1xlrmf6920bgsrzycmfp3c6nfylxvfq358cjnjglllh8aiwzsl83";
      };
    };
    base_bigstring = 
    {
      pname = "base_bigstring";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/base_bigstring-v0.15.0.tar.gz";
        sha256 = "0syml7735f0slaw2p6asmgrs6bbzzyzy397b98jb10xgidsg2xgz";
      };
      opamInputs = 
      {
        inherit (selection) ppx_jane ocaml int_repr dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/base_bigstring/base_bigstring.v0.15.0";
        hash = "sha256:0l92waghxzr8n89dfz221vl12502h1h2kg8c1zsqjzqhcxqz8a5j";
      };
    };
    base_quickcheck = 
    {
      pname = "base_quickcheck";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/base_quickcheck-v0.15.0.tar.gz";
        sha256 = "1wl107032kcd439p50yg7bk0wdv1fygcpzl8xhv8jfb06s7nn3in";
      };
      opamInputs = 
      {
        inherit (selection) splittable_random ppxlib ppx_sexp_value
        ppx_sexp_message ppx_let ppx_fields_conv ppx_base ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/base_quickcheck/base_quickcheck.v0.15.0";
        hash = "sha256:1laa3xw5pbz6hsq711fpx86vh0b3jmzc28ahz6j57hs15b64c7vg";
      };
    };
    bigarray-compat = 
    {
      pname = "bigarray-compat";
      version = "1.1.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/mirage/bigarray-compat/releases/download/v1.1.0/bigarray-compat-1.1.0.tbz";
        sha256 = "1m8q6ywik6h0wrdgv8ah2s617y37n1gdj4qvc86yi12winj6ji23";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/bigarray-compat/bigarray-compat.1.1.0";
        hash = "sha256:1hq7lmh99p720plkbv1faqqz2xz4ff9g49kkpsryg9ws3ld8ry05";
      };
    };
    bigstringaf = 
    {
      pname = "bigstringaf";
      version = "0.9.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/inhabitedtype/bigstringaf/archive/0.9.0.tar.gz";
        sha256 = "0v0h09r0690b6b27ww443zxvj1dwhxcy86fbjaf2wm56kb3qccsl";
      };
      opamInputs = 
      {
        inherit (selection) ocaml dune
        conf-pkg-config;
        ocaml-freestanding = selection.ocaml-freestanding or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/bigstringaf/bigstringaf.0.9.0";
        hash = "sha256:0g8fa097yzywbc453p7c4y62s90qh83by686av95ch9d2dw0kwgj";
      };
    };
    bin_prot = 
    {
      pname = "bin_prot";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/bin_prot-v0.15.0.tar.gz";
        sha256 = "141nkl2qiwgii7biz074vrjbp6rsqkx9mx78nyf7xf6gxbda0jvs";
      };
      opamInputs = 
      {
        inherit (selection) ppx_variants_conv ppx_sexp_conv ppx_optcomp
        ppx_fields_conv ppx_custom_printf ppx_compare ocaml dune
        base;
        mirage-xen-ocaml = selection.mirage-xen-ocaml or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/bin_prot/bin_prot.v0.15.0";
        hash = "sha256:15p4b5lj44ds81i8xpnqsdvfgzha02c6z4jqdl3lkmvn4i0zrja2";
      };
    };
    cmdliner = 
    {
      pname = "cmdliner";
      version = "1.1.1";
      src = pkgs.fetchurl 
      {
        url = "https://erratique.ch/software/cmdliner/releases/cmdliner-1.1.1.tbz";
        sha256 = "1yxm4x34cbi06bfld601ds9drlbnyx0797ym3n6yyh4rlz1qgbm1";
      };
      opamInputs = {
                     inherit (selection) ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/cmdliner/cmdliner.1.1.1";
        hash = "sha256:0zp0q9213an1spx8ps70xlm9rhmjfqmixh59b3mb7dsj1r6p19i7";
      };
    };
    conf-libffi = 
    {
      pname = "conf-libffi";
      version = "2.0.0";
      src = null;
      opamInputs = {
                     inherit (selection) conf-pkg-config;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/conf-libffi/conf-libffi.2.0.0";
        hash = "sha256:09yxvlij8k2mrbwm1lphjqdrlk9r68jwzng6gfp94qqhsnpndj7n";
      };
      buildInputs = [ (pkgs.libffi) ];
    };
    conf-libssl = 
    {
      pname = "conf-libssl";
      version = "4";
      src = null;
      opamInputs = {
                     inherit (selection) conf-pkg-config;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/conf-libssl/conf-libssl.4";
        hash = "sha256:16p7ivcaapxcwc1vcj0d2b7i82jkkv07w7xpckzjqc8gpvfhnqw6";
      };
      buildInputs = [ (pkgs.openssl) ];
    };
    conf-pkg-config = 
    {
      pname = "conf-pkg-config";
      version = "2";
      src = null;
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/conf-pkg-config/conf-pkg-config.2";
        hash = "sha256:1rli6809glz5g9xwp4wsjidc39za4n58xcpkamy6fymfnqha225n";
      };
      buildInputs = [ (pkgs.pkgconfig) ];
    };
    conf-protoc = 
    {
      pname = "conf-protoc";
      version = "1.0.0";
      src = null;
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/conf-protoc/conf-protoc.1.0.0";
        hash = "sha256:0f0hg06yj02jipa0qm4j9nwkimk7k88clsc9flvy9r30yp46wgmz";
      };
      buildInputs = [ (pkgs.libprotobuf-dev or null)
                       (pkgs.libprotobuf-devel or null)
                       (pkgs.protobuf or null)
                       (pkgs.protobuf-compiler or null)
                       (pkgs.protobuf-dev or null)
                       (pkgs.protobuf-devel or null) ];
    };
    core = 
    {
      pname = "core";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/core-v0.15.0.tar.gz";
        sha256 = "07syx268zakascxjpvqmzqgd4qrjrvddi6j5lqnhbp85hqmnyr9s";
      };
      opamInputs = 
      {
        inherit (selection) variantslib typerep time_now stdio
        splittable_random sexplib ppx_sexp_message ppx_sexp_conv ppx_jane
        ppx_inline_test ppx_hash ppx_base ppx_assert ocaml jst-config
        jane-street-headers fieldslib dune bin_prot base_quickcheck
        base_bigstring base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/core/core.v0.15.0";
        hash = "sha256:0dwln7w87g7xvlcjgyzww1p4cpzcdlvd3ksi51g3a9489jkwyy6n";
      };
    };
    core_kernel = 
    {
      pname = "core_kernel";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/core_kernel-v0.15.0.tar.gz";
        sha256 = "1h0na5sg2w6f923r3bqg64yhdmvpqrfcn5mdwj86nz022s7ji81l";
      };
      opamInputs = 
      {
        inherit (selection) ppx_jane ocaml int_repr dune core base-threads
        base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/core_kernel/core_kernel.v0.15.0";
        hash = "sha256:112n0nw2bjz03scwlrk6qabyxv3bmsxngl2jdpnijw01b2wc0yh3";
      };
    };
    core_unix = 
    {
      pname = "core_unix";
      version = "v0.15.0";
      src = self.directSrc "core_unix";
      opamInputs = 
      {
        inherit (selection) timezone spawn sexplib ppx_jane ocaml_intrinsics
        ocaml jst-config jane-street-headers expect_test_helpers_core dune
        core_kernel core base-threads;
      };
      opamSrc = "core_unix.opam";
      buildInputs = [ (pkgs.linux-headers or null) ];
    };
    cppo = 
    {
      pname = "cppo";
      version = "1.6.9";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml-community/cppo/archive/v1.6.9.tar.gz";
        sha256 = "0sm2vn5y7w7fyrwkv7f86y4nvs5vsrqy1x2nidy0lcqxq62ns0qn";
      };
      opamInputs = 
      {
        inherit (selection) ocaml dune base-unix;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/cppo/cppo.1.6.9";
        hash = "sha256:19i6yqv9lq09v3xw1sfqayh40sihhd4hfyvk9dwz1m5dv1g63xlp";
      };
    };
    csexp = 
    {
      pname = "csexp";
      version = "1.5.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml-dune/csexp/releases/download/1.5.1/csexp-1.5.1.tbz";
        sha256 = "00mc19f89pxpmjl62862ya5kjcfrl8rjzvs00j05h2m9bw3f81fn";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/csexp/csexp.1.5.1";
        hash = "sha256:01lc95kz13gpki4xazyh6n20kv1g9inyb5myv240wl2n9v50z8fl";
      };
    };
    ctypes = 
    {
      pname = "ctypes";
      version = "0.20.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocamllabs/ocaml-ctypes/archive/0.20.1.tar.gz";
        sha256 = "1iwf4yv29zp7sg78qw7jcsiyyk1xbjvjxrsjliay98jjq75imgvq";
      };
      opamInputs = 
      {
        inherit (selection) ocamlfind ocaml integers
        bigarray-compat;
        mirage-xen = selection.mirage-xen or null;
        ctypes-foreign = selection.ctypes-foreign or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ctypes/ctypes.0.20.1";
        hash = "sha256:1sziacwyjlhn5z1qylihyla76v7lifwi6bwdwlfiwbcdykssdi7g";
      };
    };
    ctypes-foreign = 
    {
      pname = "ctypes-foreign";
      version = "0.18.0";
      src = null;
      opamInputs = 
      {
        inherit (selection) conf-pkg-config conf-libffi;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ctypes-foreign/ctypes-foreign.0.18.0";
        hash = "sha256:0mr8z6hjdd8073zya2w0v5m5yv8scq90vw2d1paanib66m4y5sgm";
      };
    };
    dune = 
    {
      pname = "dune";
      version = "3.1.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/dune/releases/download/3.1.1/fiber-3.1.1.tbz";
        sha256 = "0q3bbarnkxglypw2w4rccs9fn093dgn0jdc7qx08i68vmda48j02";
      };
      opamInputs = 
      {
        inherit (selection) base-unix
        base-threads;
        ocamlfind-secondary = selection.ocamlfind-secondary or null;
        ocaml = selection.ocaml or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/dune/dune.3.1.1";
        hash = "sha256:1x9abf6ba2yw16ng2l3zra1qb2sq2vxpvcbkc02fm9i0i6irz9qb";
      };
    };
    dune-build-info = 
    {
      pname = "dune-build-info";
      version = "3.2.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/dune/releases/download/3.2.0/chrome-trace-3.2.0.tbz";
        sha256 = "1g6m3a5b1nhvrxw5agzmng7ayy1rwbib56x8dyr1xvbrmvkbq7xx";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/dune-build-info/dune-build-info.3.2.0";
        hash = "sha256:14m1yvk5syqjr48jsj8696gk802zzbq7alkgmqf0frjpyscaw6h1";
      };
    };
    dune-configurator = 
    {
      pname = "dune-configurator";
      version = "3.2.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/dune/releases/download/3.2.0/chrome-trace-3.2.0.tbz";
        sha256 = "1g6m3a5b1nhvrxw5agzmng7ayy1rwbib56x8dyr1xvbrmvkbq7xx";
      };
      opamInputs = {
                     inherit (selection) ocaml dune csexp;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/dune-configurator/dune-configurator.3.2.0";
        hash = "sha256:0658amxrfkxa7h7sx13lks7k2kpcq39mavx2jy8hnyg047jzn848";
      };
    };
    dune-rpc = 
    {
      pname = "dune-rpc";
      version = "3.2.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/dune/releases/download/3.2.0/chrome-trace-3.2.0.tbz";
        sha256 = "1g6m3a5b1nhvrxw5agzmng7ayy1rwbib56x8dyr1xvbrmvkbq7xx";
      };
      opamInputs = 
      {
        inherit (selection) xdg stdune pp ordering dyn dune csexp;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/dune-rpc/dune-rpc.3.2.0";
        hash = "sha256:1s87v583h3jdknf52wd0vgazv0pbq35f8nsc4ngy1wfw4kanqsvc";
      };
    };
    dyn = 
    {
      pname = "dyn";
      version = "3.2.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/dune/releases/download/3.2.0/chrome-trace-3.2.0.tbz";
        sha256 = "1g6m3a5b1nhvrxw5agzmng7ayy1rwbib56x8dyr1xvbrmvkbq7xx";
      };
      opamInputs = 
      {
        inherit (selection) pp ordering ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/dyn/dyn.3.2.0";
        hash = "sha256:0m39b0vwbp08dy264sjips0psskga0nab2pbl519clbina830wz6";
      };
    };
    expect_test_helpers_core = 
    {
      pname = "expect_test_helpers_core";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/expect_test_helpers_core-v0.15.0.tar.gz";
        sha256 = "0llnzx90qp1yydx4rg3fgd29wqfi92jrsvw1pp434gi5cj2p6akz";
      };
      opamInputs = 
      {
        inherit (selection) stdio sexp_pretty re ppx_jane ocaml dune core
        base_quickcheck base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/expect_test_helpers_core/expect_test_helpers_core.v0.15.0";
        hash = "sha256:00ff3q9yc3cz2azaqjvdq615s0zzx7sab5z7s80jk1mzpa041zwn";
      };
    };
    faraday = 
    {
      pname = "faraday";
      version = "0.8.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/inhabitedtype/faraday/archive/0.8.1.tar.gz";
        sha256 = "0yngavdplaaw5lb4ci4v4y5nvlhgan0mg1dlx1b5qdjgr83dk7cf";
      };
      opamInputs = 
      {
        inherit (selection) ocaml dune bigstringaf;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/faraday/faraday.0.8.1";
        hash = "sha256:1gk9zcifglbfnkjhndd96xf6bfp5ldmrpvvy3daidfd07l56vr96";
      };
    };
    faraday-lwt = 
    {
      pname = "faraday-lwt";
      version = "0.8.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/inhabitedtype/faraday/archive/0.8.1.tar.gz";
        sha256 = "0yngavdplaaw5lb4ci4v4y5nvlhgan0mg1dlx1b5qdjgr83dk7cf";
      };
      opamInputs = 
      {
        inherit (selection) ocaml lwt faraday dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/faraday-lwt/faraday-lwt.0.8.1";
        hash = "sha256:14nrlva43l45wp71rbyk2fb9nk43krqp292wzrlmc8ip19pc8y9p";
      };
    };
    faraday-lwt-unix = 
    {
      pname = "faraday-lwt-unix";
      version = "0.8.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/inhabitedtype/faraday/archive/0.8.1.tar.gz";
        sha256 = "0yngavdplaaw5lb4ci4v4y5nvlhgan0mg1dlx1b5qdjgr83dk7cf";
      };
      opamInputs = 
      {
        inherit (selection) ocaml lwt faraday-lwt dune base-unix;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/faraday-lwt-unix/faraday-lwt-unix.0.8.1";
        hash = "sha256:1zfzrrbfdvw4mbmp5alkv8bmhcsfr5nillb2nj6p49fab347182m";
      };
    };
    fiber = 
    {
      pname = "fiber";
      version = "3.2.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/dune/releases/download/3.2.0/chrome-trace-3.2.0.tbz";
        sha256 = "1g6m3a5b1nhvrxw5agzmng7ayy1rwbib56x8dyr1xvbrmvkbq7xx";
      };
      opamInputs = 
      {
        inherit (selection) stdune ocaml dyn dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/fiber/fiber.3.2.0";
        hash = "sha256:1qvb2awh1qlfcwwjdg73jbm5adhzpqdwbq8ipjmy7mybyl8whw79";
      };
    };
    fieldslib = 
    {
      pname = "fieldslib";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/fieldslib-v0.15.0.tar.gz";
        sha256 = "083izf854vzmi5zj63r7ipjf09y1dqf7iy8n6r4663444xrzs2h5";
      };
      opamInputs = {
                     inherit (selection) ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/fieldslib/fieldslib.v0.15.0";
        hash = "sha256:0h80yc0k983q2kxbg60xd7rm84xlp9hpnwnqq8q0w5csc7vpn6cc";
      };
    };
    fmt = 
    {
      pname = "fmt";
      version = "0.9.0";
      src = pkgs.fetchurl 
      {
        url = "https://erratique.ch/software/fmt/releases/fmt-0.9.0.tbz";
        sha256 = "0q8j2in2473xh7k4hfgnppv9qy77f2ih89yp6yhpbp92ba021yzi";
      };
      opamInputs = 
      {
        inherit (selection) topkg ocamlfind ocamlbuild
        ocaml;
        cmdliner = selection.cmdliner or null;
        base-unix = selection.base-unix or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/fmt/fmt.0.9.0";
        hash = "sha256:1czh5i3i4mkf9xfasji3v7n821qmnnandlklh67ali0x87brldny";
      };
    };
    gluten = 
    {
      pname = "gluten";
      version = "0.2.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/anmonteiro/gluten/releases/download/0.2.1/gluten-0.2.1.tbz";
        sha256 = "1pl0mpcprz8hmaiv28p7w51qfcx7s76zdkak0vm5cazbjl38nc46";
      };
      opamInputs = 
      {
        inherit (selection) ocaml faraday dune bigstringaf;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/gluten/gluten.0.2.1";
        hash = "sha256:0g0mr0h4v1z3mkn5n6i3cwghg2i6jlqf05lkxn1mh1ynn5vq168h";
      };
    };
    gluten-lwt = 
    {
      pname = "gluten-lwt";
      version = "0.2.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/anmonteiro/gluten/releases/download/0.2.1/gluten-0.2.1.tbz";
        sha256 = "1pl0mpcprz8hmaiv28p7w51qfcx7s76zdkak0vm5cazbjl38nc46";
      };
      opamInputs = 
      {
        inherit (selection) ocaml lwt gluten dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/gluten-lwt/gluten-lwt.0.2.1";
        hash = "sha256:18pz9yfyw0s07mswvvdz173wf58922nygy24j0b6j501gjxb7ps5";
      };
    };
    gluten-lwt-unix = 
    {
      pname = "gluten-lwt-unix";
      version = "0.2.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/anmonteiro/gluten/releases/download/0.2.1/gluten-0.2.1.tbz";
        sha256 = "1pl0mpcprz8hmaiv28p7w51qfcx7s76zdkak0vm5cazbjl38nc46";
      };
      opamInputs = 
      {
        inherit (selection) ocaml lwt gluten-lwt gluten faraday-lwt-unix
        dune;
        tls = selection.tls or null;
        lwt_ssl = selection.lwt_ssl or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/gluten-lwt-unix/gluten-lwt-unix.0.2.1";
        hash = "sha256:0xf63j3503mqmf6n575d4m3mrf2x2qw3as8cx7hc2jc7zfqrygh0";
      };
    };
    grpc = 
    {
      pname = "grpc";
      version = "0.0.0";
      src = self.directSrc "grpc";
      opamInputs = 
      {
        inherit (selection) uri ppx_yojson_conv ppx_let ppx_deriving
        ocaml-protoc-plugin ocaml lwt_ssl lwt_ppx lwt logs hmap h2-lwt-unix
        dune ctypes-foreign ctypes core_unix core;
      };
      opamSrc = "grpc.opam";
      buildInputs = [ (pkgs.grpc) ];
    };
    h2 = 
    {
      pname = "h2";
      version = "0.8.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/anmonteiro/ocaml-h2/releases/download/0.8.0/h2-0.8.0.tbz";
        sha256 = "0qcn3yvyz0h419fjg9nb20csfmwmh3ihz0zb0jfzdycf5w4mlry6";
      };
      opamInputs = 
      {
        inherit (selection) psq ocaml httpaf hpack faraday dune bigstringaf
        base64 angstrom;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/h2/h2.0.8.0";
        hash = "sha256:0pvfyk6zp8d696g15ixq1fjq6rp90lzgzl74vlpsckax0i7lwj66";
      };
    };
    h2-lwt = 
    {
      pname = "h2-lwt";
      version = "0.8.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/anmonteiro/ocaml-h2/releases/download/0.8.0/h2-0.8.0.tbz";
        sha256 = "0qcn3yvyz0h419fjg9nb20csfmwmh3ihz0zb0jfzdycf5w4mlry6";
      };
      opamInputs = 
      {
        inherit (selection) ocaml lwt h2 gluten-lwt dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/h2-lwt/h2-lwt.0.8.0";
        hash = "sha256:0hf3jgpbgawkridwnc442vpxllpg5c65nnyaz41b35s1v3kh099c";
      };
    };
    h2-lwt-unix = 
    {
      pname = "h2-lwt-unix";
      version = "0.8.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/anmonteiro/ocaml-h2/releases/download/0.8.0/h2-0.8.0.tbz";
        sha256 = "0qcn3yvyz0h419fjg9nb20csfmwmh3ihz0zb0jfzdycf5w4mlry6";
      };
      opamInputs = 
      {
        inherit (selection) ocaml lwt h2-lwt gluten-lwt-unix faraday-lwt-unix
        dune;
        tls = selection.tls or null;
        lwt_ssl = selection.lwt_ssl or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/h2-lwt-unix/h2-lwt-unix.0.8.0";
        hash = "sha256:0sar9a8df3q4fxvv0wvblafnxqbv15cwzxmr9rhc3d99fvma1hbc";
      };
    };
    hmap = 
    {
      pname = "hmap";
      version = "0.8.1";
      src = pkgs.fetchurl 
      {
        url = "http://erratique.ch/software/hmap/releases/hmap-0.8.1.tbz";
        sha256 = "10xyjy4ab87z7jnghy0wnla9wrmazgyhdwhr4hdmxxdn28dxn03a";
      };
      opamInputs = 
      {
        inherit (selection) topkg ocamlfind ocamlbuild ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/hmap/hmap.0.8.1";
        hash = "sha256:19yc0fm5c0wzxyrwfy3bcb6yh3hbgwrhhh94ggzjs7di8vv9bkv1";
      };
    };
    hpack = 
    {
      pname = "hpack";
      version = "0.2.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/anmonteiro/ocaml-h2/releases/download/0.2.0/h2-0.2.0.tbz";
        sha256 = "1rkbw1x4sviwccy9f7yymb4ncvamjyl3cl1hp4i43bg96i4zs4l5";
      };
      opamInputs = 
      {
        inherit (selection) ocaml faraday dune angstrom;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/hpack/hpack.0.2.0";
        hash = "sha256:00ynpj4gf0z8m160dakd6wcf5xzrczawjajk3aa2im2czrnnx7ld";
      };
    };
    httpaf = 
    {
      pname = "httpaf";
      version = "0.7.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/inhabitedtype/httpaf/archive/0.7.1.tar.gz";
        sha256 = "19baxlf0kmhc5dnpz9962wp41yxj0gsi6893pqqkkc54wbs9fbpa";
      };
      opamInputs = 
      {
        inherit (selection) result ocaml faraday dune bigstringaf angstrom;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/httpaf/httpaf.0.7.1";
        hash = "sha256:0nspp565d3xylf27vmzxq8015yq26pi6xjhw1zal607qbg29b4yl";
      };
    };
    inspect = 
    {
      pname = "inspect";
      version = "0.2.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/krohrer/caml-inspect/archive/v0.2.1.tar.gz";
        sha256 = "0kqqhhkdsbilhqyv618gnjz0lb37sflyq5az01s5c5710kz6dqsd";
      };
      opamInputs = {
                     inherit (selection) ocamlfind ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/inspect/inspect.0.2.1";
        hash = "sha256:1lq5cyqxwczxn5ayxjgq5hxnbpaarxypr8mxf57x9idfxh7j450l";
      };
    };
    int_repr = 
    {
      pname = "int_repr";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/int_repr-v0.15.0.tar.gz";
        sha256 = "06b7xp0v3s1jmf1bkjj2dyiwmk3ffbyglb1g8f1s3jjbj5c7ndax";
      };
      opamInputs = 
      {
        inherit (selection) ppx_jane ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/int_repr/int_repr.v0.15.0";
        hash = "sha256:1l5fkljdys8cd6wca7vwsgnmiqj12kgirlsx09j3y49w2w0y35ag";
      };
    };
    integers = 
    {
      pname = "integers";
      version = "0.7.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocamllabs/ocaml-integers/archive/0.7.0.tar.gz";
        sha256 = "11f67v9bijhkbnia7vrdp6sfpyw92kp39kn4p1p2860qkbx1gdcb";
      };
      opamInputs = 
      {
        inherit (selection) stdlib-shims ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/integers/integers.0.7.0";
        hash = "sha256:02dayvzqz5bz6hc0x8wxmm5w5ad2j7xbwf32a1qgh0fkm0y4inic";
      };
    };
    jane-street-headers = 
    {
      pname = "jane-street-headers";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/jane-street-headers-v0.15.0.tar.gz";
        sha256 = "1r27r0bxxa0iaah5rm84lwhrmh784vfpmb6056hpv0p34rxs7r1l";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/jane-street-headers/jane-street-headers.v0.15.0";
        hash = "sha256:134qp5ww1ws8k9i43sr13ivibsz88si142cdkllrcw9ib9d4aa5g";
      };
    };
    jst-config = 
    {
      pname = "jst-config";
      version = "v0.15.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/janestreet/jst-config/archive/refs/tags/v0.15.1.tar.gz";
        sha256 = "06xlyg0cyvv742haypdjbl82b5h5mla9hhcg3q67csq1nfxyalvh";
      };
      opamInputs = 
      {
        inherit (selection) ppx_assert ocaml dune-configurator dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/jst-config/jst-config.v0.15.1";
        hash = "sha256:03px4smpvwvqcvdn38jyjcfb2q41qpcgcyi8pj9ig7a76hzm5hrv";
      };
    };
    lambda-term = 
    {
      pname = "lambda-term";
      version = "3.3.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml-community/lambda-term/releases/download/3.3.1/lambda-term-3.3.1.tbz";
        sha256 = "0g6vjl9qlggiskx2n78vhjgcha4h9vxmbyxighayjsnmjvhcnxsv";
      };
      opamInputs = 
      {
        inherit (selection) zed react ocaml mew_vi lwt_react lwt logs dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/lambda-term/lambda-term.3.3.1";
        hash = "sha256:0rdszhn7gwqdbfrdx48yh8iw7gvm4dym2a7xh3kfih1gd5bagkys";
      };
    };
    logs = 
    {
      pname = "logs";
      version = "0.7.0";
      src = pkgs.fetchurl 
      {
        url = "https://erratique.ch/software/logs/releases/logs-0.7.0.tbz";
        sha256 = "1jnmd675wmsmdwyb5mx5b0ac66g4c6gpv5s4mrx2j6pb0wla1x46";
      };
      opamInputs = 
      {
        inherit (selection) topkg ocamlfind ocamlbuild
        ocaml;
        lwt = selection.lwt or null;
        js_of_ocaml = selection.js_of_ocaml or null;
        fmt = selection.fmt or null;
        cmdliner = selection.cmdliner or null;
        base-threads = selection.base-threads or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/logs/logs.0.7.0";
        hash = "sha256:0pys6d25bghrwvwd4gflib2yyp5fvdy0rkivbdyli5dmp5j35a3n";
      };
    };
    lwt = 
    {
      pname = "lwt";
      version = "5.6.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocsigen/lwt/archive/5.6.1.tar.gz";
        sha256 = "1837iagnba58018ag82c9lwaby01c031547n08jjyj8q5q6lfjgb";
      };
      opamInputs = 
      {
        inherit (selection) ocplib-endian ocaml dune-configurator dune
        cppo;
        conf-libev = selection.conf-libev or null;
        base-unix = selection.base-unix or null;
        base-threads = selection.base-threads or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/lwt/lwt.5.6.1";
        hash = "sha256:0y6rif2d9ggd7mwv4hipawn8jjfn4vdk57i6zld2izqpj6f6m9kc";
      };
    };
    lwt_ppx = 
    {
      pname = "lwt_ppx";
      version = "2.1.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocsigen/lwt/archive/5.6.0.tar.gz";
        sha256 = "1qg5wjlmrnd295lljncr1db1rw50pr13wmak3rcg92n9wd1fzm0v";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ocaml lwt dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/lwt_ppx/lwt_ppx.2.1.0";
        hash = "sha256:09kc2bwmqq41983xivild7az3s62nrhp62iinvc2b6lpcldzvqqc";
      };
    };
    lwt_react = 
    {
      pname = "lwt_react";
      version = "1.2.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocsigen/lwt/archive/5.6.0.tar.gz";
        sha256 = "1qg5wjlmrnd295lljncr1db1rw50pr13wmak3rcg92n9wd1fzm0v";
      };
      opamInputs = 
      {
        inherit (selection) react ocaml lwt dune cppo;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/lwt_react/lwt_react.1.2.0";
        hash = "sha256:0nar357nms1b90rr0iy2pa0m982yibwkbnx71hsz2v16kj9n831g";
      };
    };
    lwt_ssl = 
    {
      pname = "lwt_ssl";
      version = "1.1.3";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocsigen/lwt_ssl/archive/1.1.3.tar.gz";
        sha256 = "0dxxkif4a667ndk14sn8ka4x4gck0gvw4sc12jb84rcq5k15jlkp";
      };
      opamInputs = 
      {
        inherit (selection) ssl ocaml lwt dune base-unix;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/lwt_ssl/lwt_ssl.1.1.3";
        hash = "sha256:1fri84nnlgq0zcmmr2hk19hj8a1d2wg98p41vyq27nj6wmg6h2r2";
      };
    };
    mew = 
    {
      pname = "mew";
      version = "0.1.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/kandu/mew/archive/0.1.0.tar.gz";
        sha256 = "1rjri9mgfb9gn9fmjn0ax21y9jd9wkvr7mmx2jrlqmzgabmqrlv4";
      };
      opamInputs = 
      {
        inherit (selection) trie result ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/mew/mew.0.1.0";
        hash = "sha256:0g9xms016f909fzbwgxcy0k4xmvr5zk5bhnz66v9vpsiak2qm4s3";
      };
    };
    mew_vi = 
    {
      pname = "mew_vi";
      version = "0.5.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/kandu/mew_vi/archive/0.5.0.tar.gz";
        sha256 = "1nmg3cysglgw4115n5zpz4azrfbnfxkn2kvw73chzs69viygm4m6";
      };
      opamInputs = 
      {
        inherit (selection) react ocaml mew dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/mew_vi/mew_vi.0.5.0";
        hash = "sha256:0zsfhxpff78cqk2c81parajb59m7hqf6v8arksxbyfha6mls65hz";
      };
    };
    num = 
    {
      pname = "num";
      version = "1.4";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/num/archive/v1.4.tar.gz";
        sha256 = "090gl27g84r3s2b12vgkz8fp269jqlrhx4lpg7008yviisv8hl01";
      };
      opamInputs = {
                     inherit (selection) ocamlfind ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/num/num.1.4";
        hash = "sha256:0q683bfsbw9k3vzzxpnjv2sgjdas97aybqz19acnm14ihnalbzm2";
      };
    };
    ocaml = 
    {
      pname = "ocaml";
      version = "4.14.0";
      src = null;
      opamInputs = 
      {
        inherit (selection)
        ocaml-config;
        ocaml-variants = selection.ocaml-variants or null;
        ocaml-system = selection.ocaml-system or null;
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ocaml/ocaml.4.14.0";
        hash = "sha256:1p4i6fpw1psp5izwcdswcilkkzicdm33mwzg5hhm2cqn85784hmq";
      };
    };
    ocaml-base-compiler = 
    {
      pname = "ocaml-base-compiler";
      version = "4.14.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/ocaml/archive/4.14.0.tar.gz";
        sha256 = "1s2ml56m8i43jgvr59vx09javdrwfps8p7az9h2x2a1g71h45x1r";
      };
      opamInputs = {
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ocaml-base-compiler/ocaml-base-compiler.4.14.0";
        hash = "sha256:1scnnh353kx76icrawbykf537fmfddlgvddwnmi6pnka3hjkzgix";
      };
    };
    ocaml-compiler-libs = 
    {
      pname = "ocaml-compiler-libs";
      version = "v0.12.4";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/janestreet/ocaml-compiler-libs/releases/download/v0.12.4/ocaml-compiler-libs-v0.12.4.tbz";
        sha256 = "0q3pl20pkx410gw9g4m26qq6dmzi9qan2dqlga6c2ifc6pnckjaf";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ocaml-compiler-libs/ocaml-compiler-libs.v0.12.4";
        hash = "sha256:1blynia10j8vyj559kcvc7ic69zq6qjjn092fcsjzfw6czd8ya2c";
      };
    };
    ocaml-config = 
    {
      pname = "ocaml-config";
      version = "2";
      src = null;
      opamInputs = 
      {
        ocaml-variants = selection.ocaml-variants or null;
        ocaml-system = selection.ocaml-system or null;
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ocaml-config/ocaml-config.2";
        hash = "sha256:0h0hgqq9mbywvqygppfdc50gf9ss8a97l4dgsv3hszmzh6gglgrg";
      };
    };
    ocaml-lsp-server = 
    {
      pname = "ocaml-lsp-server";
      version = "1.12.2";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/ocaml-lsp/releases/download/1.12.2/lsp-1.12.2.tbz";
        sha256 = "0ffxjwslgn1kwwb9211wc9cbw0arx4bn9k75ll9sk2l4gicch9fg";
      };
      opamInputs = 
      {
        inherit (selection) yojson xdg uutf stdune spawn re
        ppx_yojson_conv_lib pp ordering omd octavius ocamlformat-rpc-lib
        ocaml fiber dyn dune-rpc dune-build-info dune csexp;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ocaml-lsp-server/ocaml-lsp-server.1.12.2";
        hash = "sha256:03k0sz8slfb8qfc5q2zvhjvp1scnpbqrnxafdmvwhalkdfy2lcv8";
      };
    };
    ocaml-protoc-plugin = 
    {
      pname = "ocaml-protoc-plugin";
      version = "development";
      src = self.directSrc "ocaml-protoc-plugin";
      opamInputs = 
      {
        inherit (selection) ocaml dune conf-protoc conf-pkg-config;
      };
      opamSrc = "ocaml-protoc-plugin.opam";
    };
    ocaml-syntax-shims = 
    {
      pname = "ocaml-syntax-shims";
      version = "1.0.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml-ppx/ocaml-syntax-shims/releases/download/1.0.0/ocaml-syntax-shims-1.0.0.tbz";
        sha256 = "1j7848khli4p7j8i2kmnvhdnhcwhy3zgdpf5ds5ic30ax69y3cl9";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ocaml-syntax-shims/ocaml-syntax-shims.1.0.0";
        hash = "sha256:0qnm1db0298yqcn6j9fmb0l4gr5nhcar8plskj39917invyamgd2";
      };
    };
    ocaml_intrinsics = 
    {
      pname = "ocaml_intrinsics";
      version = "v0.15.2";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/janestreet/ocaml_intrinsics/archive/refs/tags/v0.15.2.tar.gz";
        sha256 = "1jm5bjgbdhlkna7x7di975f50l4n1bnanaad9za585mzrrzll1lj";
      };
      opamInputs = 
      {
        inherit (selection) ocaml dune-configurator dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ocaml_intrinsics/ocaml_intrinsics.v0.15.2";
        hash = "sha256:156lpv9z7fzavvgxzqwbv7rz1ay4ffdzwqka6gaghx8phbnl223y";
      };
    };
    ocamlbuild = 
    {
      pname = "ocamlbuild";
      version = "0.14.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/ocamlbuild/archive/refs/tags/0.14.1.tar.gz";
        sha256 = "0ml2y3dqhhbwlf94l3jgz6gfhhfp41qaf1sjm8p8c37q1vzpj4jf";
      };
      opamInputs = {
                     inherit (selection) ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ocamlbuild/ocamlbuild.0.14.1";
        hash = "sha256:04ws6wbbsv56r4b6f29514inn77d91gb6sa8z62bxkswk1s1r1fn";
      };
    };
    ocamlfind = 
    {
      pname = "ocamlfind";
      version = "1.9.5";
      src = pkgs.fetchurl 
      {
        url = "http://download.camlcity.org/download/findlib-1.9.5.tar.gz";
        sha256 = "0w9578j1561f5gi51sn2jgxm3kh3sn88cpannhdkqcdg1kk08iqd";
      };
      opamInputs = 
      {
        inherit (selection) ocaml;
        graphics = selection.graphics or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ocamlfind/ocamlfind.1.9.5";
        hash = "sha256:1z0f7dvfsnx56ign40s3hrpz16pmhfka740y730m13lk8bw92iv1";
      };
    };
    ocamlformat-rpc-lib = 
    {
      pname = "ocamlformat-rpc-lib";
      version = "0.24.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml-ppx/ocamlformat/releases/download/0.24.1/ocamlformat-0.24.1.tbz";
        sha256 = "1kj1ykax4150i1z801bxjnllkhb6lyj728vvad8fm04gh7ljad02";
      };
      opamInputs = {
                     inherit (selection) ocaml dune csexp;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ocamlformat-rpc-lib/ocamlformat-rpc-lib.0.24.1";
        hash = "sha256:1bcbk85vm0b30xhh6fjv3ikzs737fjjs9hkyaqcgk835yd2rr5kw";
      };
    };
    ocplib-endian = 
    {
      pname = "ocplib-endian";
      version = "1.2";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/OCamlPro/ocplib-endian/archive/refs/tags/1.2.tar.gz";
        sha256 = "085kskr0cxcnv2d62n3jq1r273p7giisy56zfl26mm7amvl79blp";
      };
      opamInputs = 
      {
        inherit (selection) ocaml dune cppo base-bytes;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ocplib-endian/ocplib-endian.1.2";
        hash = "sha256:1jldvb471gyhkrzwfvqg722l3a8dc37hhhyas66skjzfmqyi2pnh";
      };
    };
    octavius = 
    {
      pname = "octavius";
      version = "1.2.2";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml-doc/octavius/archive/v1.2.2.tar.gz";
        sha256 = "1bg0fcm7haqxvx5wx2cci0mbbq0gf1vw9fa4kkd6jsriw1611jga";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/octavius/octavius.1.2.2";
        hash = "sha256:0bagilkanfjyi56hrk9dw43xs6zry9p8n3l55r3d58v5hz2xsbwl";
      };
    };
    omd = 
    {
      pname = "omd";
      version = "1.3.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/Chris00/omd/releases/download/1.3.1/omd-1.3.1.tar.gz";
        sha256 = "1sgdgzpx96br7npj8mh91cli5mqmzsjpngwm7x4212n3k1d0ivwa";
      };
      opamInputs = 
      {
        inherit (selection) ocamlfind ocamlbuild ocaml base-bytes
        base-bigarray;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/omd/omd.1.3.1";
        hash = "sha256:09fzyagdfcj1b2bwj5hacbda9lldicd0a59sac5j5nls8x8rsgcc";
      };
    };
    ordering = 
    {
      pname = "ordering";
      version = "3.2.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/dune/releases/download/3.2.0/chrome-trace-3.2.0.tbz";
        sha256 = "1g6m3a5b1nhvrxw5agzmng7ayy1rwbib56x8dyr1xvbrmvkbq7xx";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ordering/ordering.3.2.0";
        hash = "sha256:1zaqxm6xfdr1g49a0q9xw604lhqdcw06sl2qvkc8my5hcz5m3xf5";
      };
    };
    parsexp = 
    {
      pname = "parsexp";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/parsexp-v0.15.0.tar.gz";
        sha256 = "14yi8dnmpkp52i44aa2knw7m6ib8s285j0k3i240qz5c28mr1vni";
      };
      opamInputs = 
      {
        inherit (selection) sexplib0 ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/parsexp/parsexp.v0.15.0";
        hash = "sha256:0iplx26dvqbnp03ivh18gvak7l7khnklw2gfvr6yi3nmkdpgvvn2";
      };
    };
    pp = 
    {
      pname = "pp";
      version = "1.1.2";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml-dune/pp/releases/download/1.1.2/pp-1.1.2.tbz";
        sha256 = "0mhxmzsraid4yw18zr6pyjfrhvf873ls8vfd1yapdfxijs6yk974";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/pp/pp.1.1.2";
        hash = "sha256:1mdh8npl8ma5ypafp6bzhjxim2if3ygny7nm0rb5689x40b1c83b";
      };
    };
    ppx_assert = 
    {
      pname = "ppx_assert";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_assert-v0.15.0.tar.gz";
        sha256 = "0rsr1yz2rs12w6qw0dz09dg3k2x2pfgd014fgp6nj993hhznapsf";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ppx_sexp_conv ppx_here ppx_compare
        ppx_cold ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_assert/ppx_assert.v0.15.0";
        hash = "sha256:1ll9q69y6bj8s10qmkrmka10kd8zvkb50r1snaf2hfsldsn9qg31";
      };
    };
    ppx_base = 
    {
      pname = "ppx_base";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_base-v0.15.0.tar.gz";
        sha256 = "181w7y2has8jsrqdsvd08q5nhnkx523vwsk3lg0cjix55qssvfyn";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ppx_sexp_conv ppx_hash ppx_enumerate
        ppx_compare ppx_cold ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_base/ppx_base.v0.15.0";
        hash = "sha256:0ilg603nkmn7mzvasyibhyalgw92w4lfgwpgwhwk7z50yrw3dqb7";
      };
    };
    ppx_bench = 
    {
      pname = "ppx_bench";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_bench-v0.15.0.tar.gz";
        sha256 = "0zp1qal278g9ccqhvgym7qk3gybd43d55qgcxkxp6wnd7qncg25i";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ppx_inline_test ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_bench/ppx_bench.v0.15.0";
        hash = "sha256:15hd8qckij64lc133vdxnr5z87yy4zyg4d5fr0mvqkqadxdhchlk";
      };
    };
    ppx_bin_prot = 
    {
      pname = "ppx_bin_prot";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_bin_prot-v0.15.0.tar.gz";
        sha256 = "04s02l8124qdcyw1haha29rnqhg02aw16ilqj5gsx8yr24ifdj5j";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ppx_here ocaml dune bin_prot base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_bin_prot/ppx_bin_prot.v0.15.0";
        hash = "sha256:1z2ymwrjl6xc0hh47rcbs6lp1xwl05m3wswy11szr2f8ss6ihmzq";
      };
    };
    ppx_cold = 
    {
      pname = "ppx_cold";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_cold-v0.15.0.tar.gz";
        sha256 = "13gqmfw2sq80anag9bwpm35600l1fnfn7mh9cbj1291k84rsx7wb";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_cold/ppx_cold.v0.15.0";
        hash = "sha256:1m38jiza7vdnkngw9nfz0rhk31yn206kycmnr87g6zx3mdp2k898";
      };
    };
    ppx_compare = 
    {
      pname = "ppx_compare";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_compare-v0.15.0.tar.gz";
        sha256 = "11bkw7fgzfay8ws0piwphqip3y2lk2c9s2gil3zisnbvka92h1va";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_compare/ppx_compare.v0.15.0";
        hash = "sha256:02y9vlqqqxq44lfwxq6as2wqqzilwqzky4dqykafbmn603mnv5y6";
      };
    };
    ppx_custom_printf = 
    {
      pname = "ppx_custom_printf";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_custom_printf-v0.15.0.tar.gz";
        sha256 = "1056lgr0hfx0wry9q8c8v79llrf47yakqdchmk5giayv7ivsf35f";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ppx_sexp_conv ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_custom_printf/ppx_custom_printf.v0.15.0";
        hash = "sha256:15h1ir1f7nqanblp9kplblprp3wzlmsiinxma45w7v3nl3icji1v";
      };
    };
    ppx_derivers = 
    {
      pname = "ppx_derivers";
      version = "1.2.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml-ppx/ppx_derivers/archive/1.2.1.tar.gz";
        sha256 = "159vqy616ni18mn0dlv8c2y4h7mb4hahwjn53yrr59yyhzhmwndn";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_derivers/ppx_derivers.1.2.1";
        hash = "sha256:1hj1ina0n7pgz16mrvijczapw75pd0hif0i18dpw7d1fyg2qr8py";
      };
    };
    ppx_deriving = 
    {
      pname = "ppx_deriving";
      version = "5.2.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml-ppx/ppx_deriving/releases/download/v5.2.1/ppx_deriving-v5.2.1.tbz";
        sha256 = "11h75dsbv3rs03pl67hdd3lbim7wjzh257ij9c75fcknbfr5ysz9";
      };
      opamInputs = 
      {
        inherit (selection) result ppxlib ppx_derivers ocamlfind ocaml dune
        cppo;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_deriving/ppx_deriving.5.2.1";
        hash = "sha256:0n4j9a5qh5fzxc68shhkhwqfajz49rjb8ryp9lx8ykl1zxddf89k";
      };
    };
    ppx_disable_unused_warnings = 
    {
      pname = "ppx_disable_unused_warnings";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_disable_unused_warnings-v0.15.0.tar.gz";
        sha256 = "1gpfyr3a6zcifwcmpv83j371w5lxzy9889jhv8i9n7slny633axf";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_disable_unused_warnings/ppx_disable_unused_warnings.v0.15.0";
        hash = "sha256:05d5g6jjxin38l1qk6jxrzx1wxlgv9j00bylpqzn1s8hi9ygqymz";
      };
    };
    ppx_enumerate = 
    {
      pname = "ppx_enumerate";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_enumerate-v0.15.0.tar.gz";
        sha256 = "16yhk3xk2hskmlspb6mikmdp60qaypyiqgq9p17kxpial6fgpdfy";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_enumerate/ppx_enumerate.v0.15.0";
        hash = "sha256:1yp6h8n9177zp1gxai5s8rpqv9affjafp98svgawhnw66g96653j";
      };
    };
    ppx_expect = 
    {
      pname = "ppx_expect";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_expect-v0.15.0.tar.gz";
        sha256 = "0yyaz4r0l63y6p7dvhz8xa5ikdbp04y1ijwvf6b2z9rxni2mlc86";
      };
      opamInputs = 
      {
        inherit (selection) stdio re ppxlib ppx_inline_test ppx_here ocaml
        dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_expect/ppx_expect.v0.15.0";
        hash = "sha256:1rn44yj1rqmknpggwa86svs90ydmwwh2m1md5lci6v8fwiw44rqd";
      };
    };
    ppx_fields_conv = 
    {
      pname = "ppx_fields_conv";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_fields_conv-v0.15.0.tar.gz";
        sha256 = "0q9fnv8jnwzgba90y8y0mx35nqnsj9yjm7xzw9ksyfq47fvb6anj";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ocaml fieldslib dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_fields_conv/ppx_fields_conv.v0.15.0";
        hash = "sha256:0c1zdm18md8cdblvhfwi901z9csj3cbw9065wh119z4z5z4vsw45";
      };
    };
    ppx_fixed_literal = 
    {
      pname = "ppx_fixed_literal";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_fixed_literal-v0.15.0.tar.gz";
        sha256 = "1z59hpljqsy8qbjkj05fly3b1p5lf7rifamrmn6c16gr6g73chgh";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_fixed_literal/ppx_fixed_literal.v0.15.0";
        hash = "sha256:1hff8whad70y6qks1g416z23hajhcw6mbgh4w3sd3awcd6brxq0x";
      };
    };
    ppx_hash = 
    {
      pname = "ppx_hash";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_hash-v0.15.0.tar.gz";
        sha256 = "048pim0xicj8j9whd5lnchf62788sk3w89h12aybbalk1xm6dfs5";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ppx_sexp_conv ppx_compare ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_hash/ppx_hash.v0.15.0";
        hash = "sha256:18mhr158ky23cbriz2w4b5dj3xj55z9i2r5ifix9m8sq7zqqa6x7";
      };
    };
    ppx_here = 
    {
      pname = "ppx_here";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_here-v0.15.0.tar.gz";
        sha256 = "1pyaw31j9n6r98ar947n3j2qj6rrszbdxr8jghk96j4ajdy05g65";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_here/ppx_here.v0.15.0";
        hash = "sha256:12wgavjp9q0sbkymzzih9p4j80952dbh9djr0hpmx0by20dsr2in";
      };
    };
    ppx_ignore_instrumentation = 
    {
      pname = "ppx_ignore_instrumentation";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_ignore_instrumentation-v0.15.0.tar.gz";
        sha256 = "00lzm0agvh4vn5rwxb2byzixgmxjziimik99ncng6drrw0disi12";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_ignore_instrumentation/ppx_ignore_instrumentation.v0.15.0";
        hash = "sha256:0jrh2xddyky6657ipn61bf3vm63j7cii0q5srjyg4h9ab64q8g0g";
      };
    };
    ppx_inline_test = 
    {
      pname = "ppx_inline_test";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_inline_test-v0.15.0.tar.gz";
        sha256 = "06w7l575wqw2zgvsfdlslwxd6ni1nbw9jhimd7zy5a64md0x2y1z";
      };
      opamInputs = 
      {
        inherit (selection) time_now ppxlib ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_inline_test/ppx_inline_test.v0.15.0";
        hash = "sha256:15vx091zg41k0himh9s5n6bh13l23sm4zrbpmp6j50ra5gd16bks";
      };
    };
    ppx_jane = 
    {
      pname = "ppx_jane";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_jane-v0.15.0.tar.gz";
        sha256 = "0il1is2q2h91fqwga2w16z3wr7xym79adry74d1d5pws4z949ynh";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ppx_variants_conv ppx_typerep_conv
        ppx_string ppx_stable ppx_sexp_value ppx_sexp_message ppx_pipebang
        ppx_optional ppx_optcomp ppx_module_timer ppx_log ppx_let
        ppx_inline_test ppx_ignore_instrumentation ppx_here ppx_fixed_literal
        ppx_fields_conv ppx_expect ppx_disable_unused_warnings
        ppx_custom_printf ppx_bin_prot ppx_bench ppx_base ppx_assert ocaml
        dune base_quickcheck;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_jane/ppx_jane.v0.15.0";
        hash = "sha256:15fn6wz40njslshdsgi932h777szwsva5gvknxmn0djfazgzgdvi";
      };
    };
    ppx_js_style = 
    {
      pname = "ppx_js_style";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_js_style-v0.15.0.tar.gz";
        sha256 = "1szbizivg20qsvg9xclvccw3g1vpvjfgjfssx5312dgrggwy61cx";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib octavius ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_js_style/ppx_js_style.v0.15.0";
        hash = "sha256:1rrn3vkmbdxabm5ad2c2ipspf9rz32w0jqw2vkw59hs9yjlzw6if";
      };
    };
    ppx_let = 
    {
      pname = "ppx_let";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_let-v0.15.0.tar.gz";
        sha256 = "0m9niyiiv3qzv5x8hw0ifxjjzshnmx40dchka9d93mmnx88jqx34";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ppx_here ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_let/ppx_let.v0.15.0";
        hash = "sha256:0zph3hbadx24yh6arg31pjmn98a0583qhqh451g06ilclfqz5n03";
      };
    };
    ppx_log = 
    {
      pname = "ppx_log";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_log-v0.15.0.tar.gz";
        sha256 = "0gknk2b4yss9r7rir4snqkmawby98v0q3salj77cg9fwqk4a6yh3";
      };
      opamInputs = 
      {
        inherit (selection) sexplib ppxlib ppx_sexp_message ppx_sexp_conv
        ppx_here ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_log/ppx_log.v0.15.0";
        hash = "sha256:1qz3fqggg9mxw3pi622h7v5g4kq1wq5ij1jxglqz2v0js6n5pfzn";
      };
    };
    ppx_module_timer = 
    {
      pname = "ppx_module_timer";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_module_timer-v0.15.0.tar.gz";
        sha256 = "0qkwjq5m017g10zkf50gsaphvfcs0l7jbzqnld4s7ixhghsd1a12";
      };
      opamInputs = 
      {
        inherit (selection) time_now stdio ppxlib ppx_base ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_module_timer/ppx_module_timer.v0.15.0";
        hash = "sha256:02k47gyxn3ak25nmn99zx0bdpbq10v3zdrmq2ixz641a7v50rllz";
      };
    };
    ppx_optcomp = 
    {
      pname = "ppx_optcomp";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_optcomp-v0.15.0.tar.gz";
        sha256 = "1vd6ra0f1cm1kiqdh0iyzh24bp0ndl3s2va5z0mrw3y8ngbp0kn4";
      };
      opamInputs = 
      {
        inherit (selection) stdio ppxlib ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_optcomp/ppx_optcomp.v0.15.0";
        hash = "sha256:062wk4jw134j10nkmch4r5j18zizc4r2f0x1vdsbi9jzr9vzzl3n";
      };
    };
    ppx_optional = 
    {
      pname = "ppx_optional";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_optional-v0.15.0.tar.gz";
        sha256 = "0af7ayhfc1jc01mxs4k253gq49yss2ymkmjsy6fpcz39zhci7fvj";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_optional/ppx_optional.v0.15.0";
        hash = "sha256:0gwcrjc5yhmkyi0qnqfyiw358d340p0ipliai6mi3adjys5y3mhn";
      };
    };
    ppx_pipebang = 
    {
      pname = "ppx_pipebang";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_pipebang-v0.15.0.tar.gz";
        sha256 = "1a10aqrwcbc3ykz0zsc4fpfhq4dhv812p4ncj8286qdbhr6mamhy";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_pipebang/ppx_pipebang.v0.15.0";
        hash = "sha256:15jpwi4z99159gbdhba13iqs0r62rrl8apfdp7scc2lqrlc875m9";
      };
    };
    ppx_sexp_conv = 
    {
      pname = "ppx_sexp_conv";
      version = "v0.15.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/janestreet/ppx_sexp_conv/archive/refs/tags/v0.15.1.tar.gz";
        sha256 = "179f1iz504l008b3p3d9q2nj44wv7y31pc997x32m6aq1j2lfip3";
      };
      opamInputs = 
      {
        inherit (selection) sexplib0 ppxlib ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_sexp_conv/ppx_sexp_conv.v0.15.1";
        hash = "sha256:17303ra9w8cngiaz0s9q6d8617vyfx2nlz1kb813bs0g4vnj27mf";
      };
    };
    ppx_sexp_message = 
    {
      pname = "ppx_sexp_message";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_sexp_message-v0.15.0.tar.gz";
        sha256 = "1fnszzzvigf1z0y3hp758rmbm7lhl1ibfd1fkqk9fnz4h1gpi50d";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ppx_sexp_conv ppx_here ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_sexp_message/ppx_sexp_message.v0.15.0";
        hash = "sha256:1vyx5krym61z5sqi8zbm1d5ra6xxfm7dnyl66r8i0f0x3radb08v";
      };
    };
    ppx_sexp_value = 
    {
      pname = "ppx_sexp_value";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_sexp_value-v0.15.0.tar.gz";
        sha256 = "13ambcwm8qd4nfl752rvr7ksqm9jxjns4h9s1hnv561gzgfd6vip";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ppx_sexp_conv ppx_here ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_sexp_value/ppx_sexp_value.v0.15.0";
        hash = "sha256:0zjvyh1mz33nrq9sb9w166g3xm2l7m3p748n713nwdndm8dxiy6l";
      };
    };
    ppx_stable = 
    {
      pname = "ppx_stable";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_stable-v0.15.0.tar.gz";
        sha256 = "1crb0464fd10h4r690pf4ljx6hv59bmql51bvcw5js8cb5xfid4h";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_stable/ppx_stable.v0.15.0";
        hash = "sha256:1mrgqjgyk3prd4gxyz183lp753c88qqkbaaivc4p1h945g1pcxzz";
      };
    };
    ppx_string = 
    {
      pname = "ppx_string";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_string-v0.15.0.tar.gz";
        sha256 = "14qkny138jfbh3gifyrd803alxxzzill5vwf7z325l1gg5b4jggk";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ppx_base ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_string/ppx_string.v0.15.0";
        hash = "sha256:1vxrkcvc3bh4a4d6ackd2c0v7c0jl3wxr38hfdq8a0hqv9jiwgy5";
      };
    };
    ppx_typerep_conv = 
    {
      pname = "ppx_typerep_conv";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_typerep_conv-v0.15.0.tar.gz";
        sha256 = "17sy7fpn3v82aj1ga3q9yc8bbs37y45k8mhhaj7zvjm32gnjj5z7";
      };
      opamInputs = 
      {
        inherit (selection) typerep ppxlib ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_typerep_conv/ppx_typerep_conv.v0.15.0";
        hash = "sha256:1qkjpivg49x4vsh5mxwk6bjfrw57ad15gpxp26sbfxl61wiblnca";
      };
    };
    ppx_variants_conv = 
    {
      pname = "ppx_variants_conv";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_variants_conv-v0.15.0.tar.gz";
        sha256 = "175cvwwz624x81yhzd4547vk8hjplhkbbll5ds8zmhmnwzv9cw3f";
      };
      opamInputs = 
      {
        inherit (selection) variantslib ppxlib ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_variants_conv/ppx_variants_conv.v0.15.0";
        hash = "sha256:1drj2gavn3ax0hm1pq9mk78ycizd3i2vj7wb4yycr814mlyj6dhg";
      };
    };
    ppx_yojson_conv = 
    {
      pname = "ppx_yojson_conv";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_yojson_conv-v0.15.0.tar.gz";
        sha256 = "03xlz70dda015q5lyn8ifqidaijyc76nr7fsi9hkpr1847ba1yqy";
      };
      opamInputs = 
      {
        inherit (selection) ppxlib ppx_yojson_conv_lib ppx_js_style ocaml
        dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_yojson_conv/ppx_yojson_conv.v0.15.0";
        hash = "sha256:0lkjgz0d1l8sv5hj0gbmimrvsj8ryv9sc5q7z5f8j8w4sxkkqcvg";
      };
    };
    ppx_yojson_conv_lib = 
    {
      pname = "ppx_yojson_conv_lib";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/ppx_yojson_conv_lib-v0.15.0.tar.gz";
        sha256 = "115nlv3apiwsbay6188916zddpf84bnqdcbrygqw2vjnykpwblpr";
      };
      opamInputs = 
      {
        inherit (selection) yojson ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppx_yojson_conv_lib/ppx_yojson_conv_lib.v0.15.0";
        hash = "sha256:07pckbhr0nbswij1z61mw2qkanz1swp5rns7m04487rkphw2lwa2";
      };
    };
    ppxlib = 
    {
      pname = "ppxlib";
      version = "0.26.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml-ppx/ppxlib/releases/download/0.26.0/ppxlib-0.26.0.tbz";
        sha256 = "1zbyh6pr6fih2c1p6gs8y0q0ag1kzs41z4pyama96qsqx9kpn4b3";
      };
      opamInputs = 
      {
        inherit (selection) stdlib-shims sexplib0 ppx_derivers
        ocaml-compiler-libs ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ppxlib/ppxlib.0.26.0";
        hash = "sha256:1b94sf1xwgvi3mb2k4i8h3rx1qwvkqcg1nk3iwb5qmp2flbpzk6k";
      };
    };
    psq = 
    {
      pname = "psq";
      version = "0.2.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/pqwy/psq/releases/download/v0.2.0/psq-v0.2.0.tbz";
        sha256 = "1j4lqkq17rskhgcrpgr4n1m1a2b1x35mlxj6f9g05rhpmgvgvknk";
      };
      opamInputs = {
                     inherit (selection) seq ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/psq/psq.0.2.0";
        hash = "sha256:0bbyscl3az6vi6rncif7f8da7br78870qql5vlmg56w7ka3sgj9s";
      };
    };
    re = 
    {
      pname = "re";
      version = "1.10.4";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/ocaml-re/releases/download/1.10.4/re-1.10.4.tbz";
        sha256 = "0z3lracww84cswj0a4s28x987sk28c7h2j87hb3iv6xa011kxsw3";
      };
      opamInputs = {
                     inherit (selection) seq ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/re/re.1.10.4";
        hash = "sha256:00918wlxkkbj8dwpiwpyyvc8falk4ddrf0pxn5v2kahc2jl251vg";
      };
    };
    react = 
    {
      pname = "react";
      version = "1.2.2";
      src = pkgs.fetchurl 
      {
        url = "https://erratique.ch/software/react/releases/react-1.2.2.tbz";
        sha256 = "16cg4byj8lfbbw96dhh8sks5y9n1c3fshz7f2p8m7wgisqax7bf4";
      };
      opamInputs = 
      {
        inherit (selection) topkg ocamlfind ocamlbuild ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/react/react.1.2.2";
        hash = "sha256:1airidp9cw8sk92jc3bvarph3pc43qaf3hcywi0anmpznsygcm0z";
      };
    };
    result = 
    {
      pname = "result";
      version = "1.5";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/janestreet/result/releases/download/1.5/result-1.5.tbz";
        sha256 = "0cpfp35fdwnv3p30a06wd0py3805qxmq3jmcynjc3x2qhlimwfkw";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/result/result.1.5";
        hash = "sha256:0ybmvlisfz5swvbcq855czz1ysv9zxmb79f1m0x8284hczmfm98f";
      };
    };
    seq = 
    {
      pname = "seq";
      version = "base";
      src = null;
      opamInputs = {
                     inherit (selection) ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/seq/seq.base";
        hash = "sha256:1vm8mk6zm2q3fwnkprl6jib048zr4ysldw0bl74x6wwbxj0vx6k9";
      };
    };
    sexp_pretty = 
    {
      pname = "sexp_pretty";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/sexp_pretty-v0.15.0.tar.gz";
        sha256 = "1wax07zgvjcmrdnc2g89h6sbp5cirk65l5ibf00h57dzq8xn9s4r";
      };
      opamInputs = 
      {
        inherit (selection) sexplib re ppx_base ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/sexp_pretty/sexp_pretty.v0.15.0";
        hash = "sha256:193i7rpjy0rz7fd8wm0w3kldhh2kidx4klrml1smcicl46vv97ga";
      };
    };
    sexplib = 
    {
      pname = "sexplib";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/sexplib-v0.15.0.tar.gz";
        sha256 = "1xs55f11yhscnfrzpvy1vn05j6xi9kxy097465624l615j7k8qm5";
      };
      opamInputs = 
      {
        inherit (selection) sexplib0 parsexp ocaml num dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/sexplib/sexplib.v0.15.0";
        hash = "sha256:1g731ans2ivmzs0ajy1vl31hhp64p60i4lda91asgcya2dbg6lg3";
      };
    };
    sexplib0 = 
    {
      pname = "sexplib0";
      version = "v0.15.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/janestreet/sexplib0/archive/refs/tags/v0.15.1.tar.gz";
        sha256 = "1cv78931di97av82khqwmx5s51mrn9d2b82z0si88gxwndz83kg8";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/sexplib0/sexplib0.v0.15.1";
        hash = "sha256:1yg5rknfbx67wrs3gampx3jmcw9si38n90cj4kg5626k41nmhsc0";
      };
    };
    spawn = 
    {
      pname = "spawn";
      version = "v0.15.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/janestreet/spawn/archive/v0.15.1.tar.gz";
        sha256 = "0l4xq43dxsvxli9kkpnywrw81dyn11bfpdlsd36kyv5b9wqyxzcs";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/spawn/spawn.v0.15.1";
        hash = "sha256:18cl7lgcf5gl3r5ffdqiza5hydjgn8hwk4lsb6gsibv8jd7jx8bq";
      };
    };
    splittable_random = 
    {
      pname = "splittable_random";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/splittable_random-v0.15.0.tar.gz";
        sha256 = "006vxsmjlayqm39r343mishikx63ifd4kkwbr92rzhxmbz4fdy4z";
      };
      opamInputs = 
      {
        inherit (selection) ppx_sexp_message ppx_inline_test ppx_bench
        ppx_assert ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/splittable_random/splittable_random.v0.15.0";
        hash = "sha256:02qr51n5sq4hc131grw37p92j30pflia89qgsvg0yw4czc5lvlqc";
      };
    };
    ssl = 
    {
      pname = "ssl";
      version = "0.5.10";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/savonet/ocaml-ssl/archive/v0.5.10.tar.gz";
        sha256 = "0vcc8p6i8lhs59y3ycikllc6j1adh9syh63g5ibnrp3yz3lk2cwl";
      };
      opamInputs = 
      {
        inherit (selection) ocaml dune-configurator dune conf-libssl
        base-unix;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/ssl/ssl.0.5.10";
        hash = "sha256:01dz4wn8s75bxd5mc1jqi1cabvw3ic9jkrwbz9swjlwf9rxfwdvj";
      };
    };
    stdio = 
    {
      pname = "stdio";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/stdio-v0.15.0.tar.gz";
        sha256 = "0jsyg4jlp76d9gx1fngms6nfs7dcpsysdsvkywjq9a663n994wn3";
      };
      opamInputs = {
                     inherit (selection) ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/stdio/stdio.v0.15.0";
        hash = "sha256:19z0wh8sm8ldwwpqq2hxn85b74z1g3jlkx7vfpqknm0pxhill7m1";
      };
    };
    stdlib-shims = 
    {
      pname = "stdlib-shims";
      version = "0.3.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/stdlib-shims/releases/download/0.3.0/stdlib-shims-0.3.0.tbz";
        sha256 = "0jnqsv6pqp5b5g7lcjwgd75zqqvcwcl5a32zi03zg1kvj79p5gxs";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/stdlib-shims/stdlib-shims.0.3.0";
        hash = "sha256:1hwyzzcx7clz4p58fj3n6frq2srbxdmhmxxd6n6mpw9gj2vs6yiw";
      };
    };
    stdune = 
    {
      pname = "stdune";
      version = "3.2.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/dune/releases/download/3.2.0/chrome-trace-3.2.0.tbz";
        sha256 = "1g6m3a5b1nhvrxw5agzmng7ayy1rwbib56x8dyr1xvbrmvkbq7xx";
      };
      opamInputs = 
      {
        inherit (selection) pp ordering ocaml dyn dune csexp;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/stdune/stdune.3.2.0";
        hash = "sha256:19yji4c393xijl59ky6h6ahi63cylwymavbkj33z10kp9hhdx0fa";
      };
    };
    stringext = 
    {
      pname = "stringext";
      version = "1.6.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/rgrinberg/stringext/releases/download/1.6.0/stringext-1.6.0.tbz";
        sha256 = "1sh6nafi3i9773j5mlwwz3kxfzdjzsfqj2qibxhigawy5vazahfv";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/stringext/stringext.1.6.0";
        hash = "sha256:01k5gspcs4i7ipghzm2qsxgmyja86nd224achciny46xdjpkchpd";
      };
    };
    time_now = 
    {
      pname = "time_now";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/time_now-v0.15.0.tar.gz";
        sha256 = "1a6b1f55mwci1bd8w8vji0qn6wbs60jbwixvwgy4klx2blq57cqk";
      };
      opamInputs = 
      {
        inherit (selection) ppx_optcomp ppx_base ocaml jst-config
        jane-street-headers dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/time_now/time_now.v0.15.0";
        hash = "sha256:1l6ffa9f0i1kpm2fgmhl2f63bbswd8sgzjbfgpcxkgxsivjgp6qf";
      };
    };
    timezone = 
    {
      pname = "timezone";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/timezone-v0.15.0.tar.gz";
        sha256 = "03a1f492qx8qpxcnr3vylm4r04f7pyhy445rq2kafyf70vfwxzm5";
      };
      opamInputs = 
      {
        inherit (selection) ppx_jane ocaml dune core;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/timezone/timezone.v0.15.0";
        hash = "sha256:1r2pk2zlxlmznr7qi0sip0nvhfm0i619jcqdjl41dfvh7jbagjnx";
      };
    };
    topkg = 
    {
      pname = "topkg";
      version = "1.0.5";
      src = pkgs.fetchurl 
      {
        url = "https://erratique.ch/software/topkg/releases/topkg-1.0.5.tbz";
        sha256 = "1iyinmcfqpprk7k4cc51nqgypayprbj4larwcfqw86k5dri84825";
      };
      opamInputs = 
      {
        inherit (selection) ocamlfind ocamlbuild ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/topkg/topkg.1.0.5";
        hash = "sha256:04vg4zic7f6zk44vkvqw2fcr562hl7d0gklv3vgphk4n3bnqbcyy";
      };
    };
    trie = 
    {
      pname = "trie";
      version = "1.0.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/kandu/trie/archive/1.0.0.tar.gz";
        sha256 = "1slq4kiwnc723dsaw15ms7xxpqz061v8zck1m6iyc5j2li70by62";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/trie/trie.1.0.0";
        hash = "sha256:1ds07ikjjymacnlxfx1widfi7qz0js61lsqqq0xa90501p17nq10";
      };
    };
    typerep = 
    {
      pname = "typerep";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/typerep-v0.15.0.tar.gz";
        sha256 = "0ghqlfkpb20l3wp7dgb27viz5zdsmsd3ijrzb4bs8h0lniyx7j16";
      };
      opamInputs = {
                     inherit (selection) ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/typerep/typerep.v0.15.0";
        hash = "sha256:0awhhkrrkzkgvc04k1ymrna2wcw72wgv2qlkcibrymgq1kvzrkyr";
      };
    };
    uchar = 
    {
      pname = "uchar";
      version = "0.0.2";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/uchar/releases/download/v0.0.2/uchar-0.0.2.tbz";
        sha256 = "1w2saw7zanf9m9ffvz2lvcxvlm118pws2x1wym526xmydhqpyfa7";
      };
      opamInputs = {
                     inherit (selection) ocamlbuild ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/uchar/uchar.0.0.2";
        hash = "sha256:028vff7rkmhyyn3xr5flfkc3ihz0axirbg538an8wbsmc4y1gv02";
      };
    };
    uri = 
    {
      pname = "uri";
      version = "4.2.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/mirage/ocaml-uri/releases/download/v4.2.0/uri-v4.2.0.tbz";
        sha256 = "0szifda6yism5vn5jdizkha3ad0xk6zw4xgfl8g77dnv83ci7h65";
      };
      opamInputs = 
      {
        inherit (selection) stringext ocaml dune angstrom;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/uri/uri.4.2.0";
        hash = "sha256:1s0rbjixhl1ypxv9xxmldlmxm6gj9rrzmcgydp8dna4n0wza4hbf";
      };
    };
    utop = 
    {
      pname = "utop";
      version = "2.10.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml-community/utop/releases/download/2.10.0/utop-2.10.0.tbz";
        sha256 = "001dg31355861kbqfj91yxlcfv6723i3wrrjmh1ccqgaz6i1cpa7";
      };
      opamInputs = 
      {
        inherit (selection) zed react ocamlfind ocaml lwt_react lwt logs
        lambda-term dune cppo base-unix base-threads;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/utop/utop.2.10.0";
        hash = "sha256:1d4n00d3jb0f4njgsbhxq7czq9mpx9nkcgaln8zmrkjgfrlvprjs";
      };
    };
    uucp = 
    {
      pname = "uucp";
      version = "14.0.0";
      src = pkgs.fetchurl 
      {
        url = "https://erratique.ch/software/uucp/releases/uucp-14.0.0.tbz";
        sha256 = "1yx9nih3d9prb9zizq8fzmmqylf24a6yifhf81h33znrj5xn1mpj";
      };
      opamInputs = 
      {
        inherit (selection) topkg ocamlfind ocamlbuild
        ocaml;
        uutf = selection.uutf or null;
        uunf = selection.uunf or null;
        cmdliner = selection.cmdliner or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/uucp/uucp.14.0.0";
        hash = "sha256:03h0lnfnb4sad9lndnv8p5ylpwvp8gzqs9dk3v3cz9vz156fi99d";
      };
    };
    uuseg = 
    {
      pname = "uuseg";
      version = "14.0.0";
      src = pkgs.fetchurl 
      {
        url = "https://erratique.ch/software/uuseg/releases/uuseg-14.0.0.tbz";
        sha256 = "1g9zyzjkhqxgbb9mh3cgaawscwdazv6y8kdqvmy6yhnimmfqv25p";
      };
      opamInputs = 
      {
        inherit (selection) uucp topkg ocamlfind ocamlbuild
        ocaml;
        uutf = selection.uutf or null;
        cmdliner = selection.cmdliner or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/uuseg/uuseg.14.0.0";
        hash = "sha256:0j96m881gh80g7sfy8va4l2w7gmijv7dznk38ndl33k6pyhdikna";
      };
    };
    uutf = 
    {
      pname = "uutf";
      version = "1.0.3";
      src = pkgs.fetchurl 
      {
        url = "https://erratique.ch/software/uutf/releases/uutf-1.0.3.tbz";
        sha256 = "0s05r8ggp1g97zq4rnvbxzj22pv8ld0k5wsdw662jw0y7mhsawl7";
      };
      opamInputs = 
      {
        inherit (selection) topkg ocamlfind ocamlbuild
        ocaml;
        cmdliner = selection.cmdliner or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/uutf/uutf.1.0.3";
        hash = "sha256:1x57h3bc68rsm2kd18wjbkfjk67shak6jgplp7paw97faqgmgx3x";
      };
    };
    variantslib = 
    {
      pname = "variantslib";
      version = "v0.15.0";
      src = pkgs.fetchurl 
      {
        url = "https://ocaml.janestreet.com/ocaml-core/v0.15/files/variantslib-v0.15.0.tar.gz";
        sha256 = "12dssx4by6rgjzfrvksz83hkcpmsq0brn87dh22pv1rrwhw79n75";
      };
      opamInputs = {
                     inherit (selection) ocaml dune base;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/variantslib/variantslib.v0.15.0";
        hash = "sha256:1x4qsay1hpsrh147rmqbhzmg0lv3inci31mjsa5k28hhb4mk3sfh";
      };
    };
    xdg = 
    {
      pname = "xdg";
      version = "3.2.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml/dune/releases/download/3.2.0/chrome-trace-3.2.0.tbz";
        sha256 = "1g6m3a5b1nhvrxw5agzmng7ayy1rwbib56x8dyr1xvbrmvkbq7xx";
      };
      opamInputs = {
                     inherit (selection) ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/xdg/xdg.3.2.0";
        hash = "sha256:198zx7qyg0lj6b1cxspwpsdcg80m9zmmyfcq21qcizz8rdlc4v47";
      };
    };
    yojson = 
    {
      pname = "yojson";
      version = "2.0.1";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml-community/yojson/releases/download/2.0.1/yojson-2.0.1.tbz";
        sha256 = "0dn8l220b4yv09rdg1xb8drjc1m4z3wifkrrb1m6b52a59rbrj4b";
      };
      opamInputs = 
      {
        inherit (selection) seq ocaml dune cppo;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/yojson/yojson.2.0.1";
        hash = "sha256:1nsm2nd5vy6knzfll8q8q59b1rp029cd4l4j67znhb7gl37pj6ih";
      };
    };
    zed = 
    {
      pname = "zed";
      version = "3.2.0";
      src = pkgs.fetchurl 
      {
        url = "https://github.com/ocaml-community/zed/releases/download/3.2.0/zed-3.2.0.tbz";
        sha256 = "0gji5rp44mqsld117n8g93cqg8302py1piqshmvg63268fylj8rl";
      };
      opamInputs = 
      {
        inherit (selection) uutf uuseg uucp uchar result react ocaml dune;
      };
      opamSrc = repoPath (repos.opam-repository.src) 
      {
        package = "packages/zed/zed.3.2.0";
        hash = "sha256:08kbibpismyxhymv2hr00q3xzcb3zmsxdgq1iz4iha2yd0p3whxb";
      };
    };
  };
}

